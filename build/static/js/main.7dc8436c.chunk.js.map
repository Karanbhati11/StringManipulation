{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","togglemode","htmlFor","sampleprara","Textform","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","marginLeft","arr","split","reverse","join","length","Alert","alert","role","msg","App","setAlert","message","setTimeout","setmode","aboutText","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7dc8436c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <nav className= {`navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n       \r\n       \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n\r\n  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n</nav>\r\n\r\n\r\n<p>{props.sampleprara}</p>\r\n</>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes={title : PropTypes.string}","\r\nimport React, { useState } from 'react';\r\n// import PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpclick = () =>{\r\n        // console.log(\"UpperCase was Clicked\");\r\n        let newtext=text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert('Converted to Uppercase', \"success\" );\r\n\r\n    }\r\n    const handledownclick = () =>{\r\n        // console.log(\"UpperCase was Clicked\");\r\n        let newtext=text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert('Converted to lowercase', \"success\" );\r\n    }\r\n\r\n\r\n\r\n    const handleonChange = (event) =>{\r\n        // console.log(\"Onchange\");\r\n        setText(event.target.value);\r\n       \r\n    }\r\n\r\n    const handlecleartext = (event) =>{\r\n        let newtext= \"\";\r\n        setText(newtext);\r\n        props.showAlert('Text Cleared', \"success\" );\r\n\r\n    }\r\n\r\n\r\n    const Reversefunction = (event) =>{\r\n     \r\n      var arr= text.split(\" \").reverse().join(\" \");\r\n      setText(arr);\r\n    \r\n}\r\n    const [text, setText] = useState('');\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style= {{ color: props.mode==='light'?'black ':'white'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} style= {{ backgroundColor: props.mode==='light'?'white ':'grey', color : props.mode=='light'?'black':'white'}} onChange={handleonChange} id=\"mybox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary\" onClick={handledownclick}style={{marginLeft : 20 } } >Convert to toLowerCase</button>\r\n      <button className=\"btn btn-primary\" onClick={handlecleartext}style={{marginLeft : 20 } } >Clear Text</button>\r\n      <button className=\"btn btn-primary\" onClick={Reversefunction}style={{marginLeft : 20 } } >Reverse</button>\r\n    </div>\r\n    <div className=\"container my-3\"style= {{ color: props.mode==='light'?'black ':'white'}} >\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} characters </p>\r\n      <p> { 0.008 * text.split(\" \").length}  Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter a text to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import  React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n   props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n}from \"react-router-dom\"\nfunction App() {\n\n  const [alert, setAlert] = useState(null)\n\n  const showAlert  = (message,type) =>{\n\n    setAlert({\n\n      msg : message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  const [mode, setmode] = useState('light');\n\n  const togglemode = () =>{\n\n      if(mode ==='light'){\n       setmode('dark');\n       document.body.style.backgroundColor = '#0c1c34';\n       showAlert(\"Dark Mode is Enables\", \"success\");\n      }\n      else{\n        setmode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light Mode is Enabled\", \"success\");\n\n      }\n  }\n  return (\n    <>\n    <Router>\n      <Navbar\n        title=\"Project\"\n        aboutText=\"About US\"\n        sampleprara=\"This is sample Paragraph.\"  mode= {mode}  togglemode={togglemode}/>\n\n        <Alert alert={alert}/>\n\n      <div className=\"container\">\n\n\n\n      <Switch>\n          <Route exact path=\"/\">\n          <Textform showAlert={showAlert} heading=\"Enter a Text to Analyze\" mode= {mode} />\n          </Route>\n        </Switch>\n       \n     \n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}